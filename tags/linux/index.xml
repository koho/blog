<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on xhat's Blog</title><link>https://xhat.org/tags/linux/</link><description>Recent content in Linux on xhat's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 14 Dec 2021 00:09:32 +0800</lastBuildDate><atom:link href="https://xhat.org/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 部署 Nginx</title><link>https://xhat.org/posts/linux-nginx-deploy/</link><pubDate>Tue, 14 Dec 2021 00:09:32 +0800</pubDate><guid>https://xhat.org/posts/linux-nginx-deploy/</guid><description>安装 参考官网的安装文档。
静态网站 # 强制跳转HTTPS server { listen 80; server_name example.com; return 301 https://$http_host$request_uri; } server { listen 443 ssl http2; ssl_certificate /etc/example.com.crt; ssl_certificate_key /etc/example.com.key; ssl_protocols TLSv1.3 TLSv1.2; server_name example.com; #access_log /var/log/nginx/host.access.log main; location / { root /usr/share/app/html; index index.html index.htm; } #error_page 404 /404.html; error_page 497 https://$http_host$request_uri; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } } 代理网站 server{ listen 8888 ssl http2; listen [::]:8888 ssl http2; ssl_certificate /etc/example.</description></item><item><title>Linux 部署 WireGuard</title><link>https://xhat.org/posts/linux-wireguard/</link><pubDate>Fri, 03 Sep 2021 14:33:27 +0800</pubDate><guid>https://xhat.org/posts/linux-wireguard/</guid><description>安装 CentOS sudo yum install epel-release elrepo-release sudo yum install yum-plugin-elrepo sudo yum install kmod-wireguard wireguard-tools Ubuntu sudo apt install wireguard 若内核太老不想升级，可以使用 wireguard-go 代替。
配置 创建 Wireguard 目录： mkdir /etc/wireguard/ cd /etc/wireguard/ 生成密钥对 wg genkey | tee privatekey | wg pubkey &amp;gt; publickey 编辑配置文件 vi wg0.conf 内容模板：
[Interface] Address = 10.100.100.3/32 PrivateKey = KEY ListenPort = 21841 PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE [Peer] PublicKey = PUB Endpoint = IP AllowedIPs = 10.</description></item></channel></rss>